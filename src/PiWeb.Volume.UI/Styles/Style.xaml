<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:components="clr-namespace:Zeiss.PiWeb.Volume.UI.Components"
    xmlns:effects="clr-namespace:Zeiss.PiWeb.Volume.UI.Effects"
    xmlns:ui="clr-namespace:Zeiss.PiWeb.Volume.UI.Extensions">

    <LinearGradientBrush x:Key="HoverBackgroundBrushKey" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#FCFCFC" />
        <GradientStop Offset="1" Color="#EBF3FD" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="HoverOuterBorderBrushKey" Color="#B8D6FB" />
    <SolidColorBrush x:Key="HoverInnerBorderBrushKey" Color="#F2F7FE" />

    <LinearGradientBrush x:Key="SelectedActiveBackgroundBrushKey" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#DCEBFC" />
        <GradientStop Offset="1" Color="#C1DBFC" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="SelectedActiveOuterBorderBrushKey" Color="#7DA2CE" />
    <SolidColorBrush x:Key="SelectedActiveInnerBorderBrushKey" Color="#EBF4FD" />

    <SolidColorBrush x:Key="LightGrayBrush" Color="#F8F8F8" />
    <SolidColorBrush x:Key="MediumGrayBrush" Color="#A0A0A0" />

    <Color
        x:Key="IconsYellowColor"
        A="255"
        B="{ui:Hex 65}"
        G="{ui:Hex B6}"
        R="{ui:Hex EA}" />
    <Color
        x:Key="IconsRedColor"
        A="255"
        B="{ui:Hex 2E}"
        G="{ui:Hex 47}"
        R="{ui:Hex CC}" />
    <Color
        x:Key="IconsBlueColor"
        A="255"
        B="{ui:Hex B4}"
        G="{ui:Hex 7A}"
        R="{ui:Hex 43}" />
    <Color
        x:Key="IconsGreenColor"
        A="255"
        B="{ui:Hex 85}"
        G="{ui:Hex AD}"
        R="{ui:Hex 4B}" />

    <SolidColorBrush x:Key="IconsYellowBrush" Color="{StaticResource IconsYellowColor}" />
    <SolidColorBrush x:Key="IconsRedBrush" Color="{StaticResource IconsRedColor}" />
    <SolidColorBrush x:Key="IconsBlueBrush" Color="{StaticResource IconsBlueColor}" />
    <SolidColorBrush x:Key="IconsGreenBrush" Color="{StaticResource IconsGreenColor}" />

    <Style x:Key="ToolbarButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Border
                            x:Name="outerBorder"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="1"
                            SnapsToDevicePixels="true">
                            <Border
                                x:Name="innerBorder"
                                Background="{TemplateBinding Background}"
                                CornerRadius="1"
                                SnapsToDevicePixels="true">
                                <ContentPresenter
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="outerBorder" Property="BorderBrush" Value="{StaticResource HoverOuterBorderBrushKey}" />
                            <Setter TargetName="innerBorder" Property="Background" Value="{StaticResource HoverBackgroundBrushKey}" />
                            <Setter TargetName="innerBorder" Property="BorderBrush" Value="{StaticResource HoverInnerBorderBrushKey}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="outerBorder" Property="BorderBrush" Value="{StaticResource SelectedActiveOuterBorderBrushKey}" />
                            <Setter TargetName="innerBorder" Property="Background" Value="{StaticResource SelectedActiveBackgroundBrushKey}" />
                            <Setter TargetName="innerBorder" Property="BorderBrush" Value="{StaticResource SelectedActiveInnerBorderBrushKey}" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="outerBorder" Property="BorderBrush" Value="{StaticResource SelectedActiveOuterBorderBrushKey}" />
                            <Setter TargetName="innerBorder" Property="Background" Value="{StaticResource SelectedActiveBackgroundBrushKey}" />
                            <Setter TargetName="innerBorder" Property="BorderBrush" Value="{StaticResource SelectedActiveInnerBorderBrushKey}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type components:VolumeDirectionButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type components:VolumeDirectionButton}">
                    <Canvas>
                        <Path
                            x:Name="Path"
                            Data="{TemplateBinding OuterPath}"
                            Fill="{StaticResource LightGrayBrush}" />
                        <Path Data="{TemplateBinding InnerPath}" Fill="Transparent" />
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Path" Property="Fill" Value="{StaticResource MediumGrayBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Path" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Icon" TargetType="{x:Type Image}">
        <Setter Property="Stretch" Value="None" />
        <Setter Property="Margin" Value="4,2" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Effect">
                    <Setter.Value>
                        <effects:GrayscaleEffect />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Header" TargetType="TextBlock">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Margin" Value="4,2" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="HeaderColumn" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter
                            Margin="0,0,5,0"
                            VerticalAlignment="Center"
                            ContentSource="Header" />
                        <ContentPresenter Grid.Column="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="IsTabStop" Value="False" />
    </Style>

    <Style x:Key="OverlayScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}">
                        <ScrollContentPresenter
                            x:Name="PART_ScrollContentPresenter"
                            Margin="{TemplateBinding Padding}"
                            CanContentScroll="{TemplateBinding CanContentScroll}"
                            CanHorizontallyScroll="False"
                            CanVerticallyScroll="False" />
                        <ScrollBar
                            Name="PART_VerticalScrollBar"
                            HorizontalAlignment="Right"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            Opacity="0"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                            Value="{TemplateBinding VerticalOffset}" />
                        <ScrollBar
                            Name="PART_HorizontalScrollBar"
                            VerticalAlignment="Bottom"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            Opacity="0"
                            Orientation="Horizontal"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                            Value="{TemplateBinding HorizontalOffset}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_HorizontalScrollBar"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="0:0:0.300" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_VerticalScrollBar"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="0:0:0.300" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_HorizontalScrollBar"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0.300" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_VerticalScrollBar"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0.300" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>