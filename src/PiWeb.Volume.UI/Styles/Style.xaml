<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:effects="clr-namespace:Zeiss.IMT.PiWeb.Volume.UI.Effects"
                    xmlns:components="clr-namespace:Zeiss.IMT.PiWeb.Volume.UI.Components">

    <LinearGradientBrush x:Key="HoverBackgroundBrushKey" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#FCFCFC" />
        <GradientStop Offset="1" Color="#EBF3FD" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="HoverOuterBorderBrushKey" Color="#B8D6FB" />
    <SolidColorBrush x:Key="HoverInnerBorderBrushKey" Color="#F2F7FE" />

    <LinearGradientBrush x:Key="SelectedActiveBackgroundBrushKey" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#DCEBFC" />
        <GradientStop Offset="1" Color="#C1DBFC" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="SelectedActiveOuterBorderBrushKey" Color="#7DA2CE" />
    <SolidColorBrush x:Key="SelectedActiveInnerBorderBrushKey" Color="#EBF4FD" />

    <SolidColorBrush x:Key="LightGrayBrush" Color="#F8F8F8" />
    <SolidColorBrush x:Key="MediumGrayBrush" Color="#A0A0A0" />

    <SolidColorBrush x:Key="IconsRedBrush" Color="#CC472E" />
    <SolidColorBrush x:Key="IconsBlueBrush" Color="#437AB4" />
    <SolidColorBrush x:Key="IconsGreenBrush" Color="#4BAD85" />

    <Style x:Key="ToolbarButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Border x:Name="outerBorder"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2"
                                SnapsToDevicePixels="true">
                            <Border x:Name="innerBorder"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="1"
                                    CornerRadius="1"
                                    Padding="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="outerBorder" Property="BorderBrush"
                                    Value="{StaticResource HoverOuterBorderBrushKey}" />
                            <Setter TargetName="innerBorder" Property="Background"
                                    Value="{StaticResource HoverBackgroundBrushKey}" />
                            <Setter TargetName="innerBorder" Property="BorderBrush"
                                    Value="{StaticResource HoverInnerBorderBrushKey}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="outerBorder" Property="BorderBrush"
                                    Value="{StaticResource SelectedActiveOuterBorderBrushKey}" />
                            <Setter TargetName="innerBorder" Property="Background"
                                    Value="{StaticResource SelectedActiveBackgroundBrushKey}" />
                            <Setter TargetName="innerBorder" Property="BorderBrush"
                                    Value="{StaticResource SelectedActiveInnerBorderBrushKey}" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="outerBorder" Property="BorderBrush"
                                    Value="{StaticResource SelectedActiveOuterBorderBrushKey}" />
                            <Setter TargetName="innerBorder" Property="Background"
                                    Value="{StaticResource SelectedActiveBackgroundBrushKey}" />
                            <Setter TargetName="innerBorder" Property="BorderBrush"
                                    Value="{StaticResource SelectedActiveInnerBorderBrushKey}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type components:VolumeDirectionButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type components:VolumeDirectionButton}">
                    <Canvas>
                        <Path x:Name="Path" Fill="{StaticResource LightGrayBrush}"
                              Data="{TemplateBinding OuterPath}" />
                        <Path Fill="Transparent" Data="{TemplateBinding InnerPath}" />
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Path" Property="Fill"
                                    Value="{StaticResource MediumGrayBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Path" Property="Fill"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Icon" TargetType="{x:Type Image}">
        <Setter Property="Stretch" Value="None" />
        <Setter Property="Margin" Value="4,2" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Effect">
                    <Setter.Value>
                        <effects:GrayscaleEffect />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBlock" x:Key="Header">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Margin" Value="4,2" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="HeaderColumn" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter ContentSource="Header"
                                          Margin="0,0,5,0"
                                          VerticalAlignment="Center" />
                        <ContentPresenter Grid.Column="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="IsTabStop"
                Value="False" />
    </Style>

    <Style x:Key="OverlayScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}">
                        <ScrollContentPresenter Margin="{TemplateBinding Padding}" x:Name="PART_ScrollContentPresenter"
                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                CanHorizontallyScroll="False" CanVerticallyScroll="False" />
                        <ScrollBar Name="PART_VerticalScrollBar" HorizontalAlignment="Right"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}" Opacity="0"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{TemplateBinding VerticalOffset}" />
                        <ScrollBar Name="PART_HorizontalScrollBar" Opacity="0" VerticalAlignment="Bottom"
                                   Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{TemplateBinding HorizontalOffset}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.300"
                                                         Storyboard.TargetName="PART_HorizontalScrollBar"
                                                         Storyboard.TargetProperty="Opacity" />
                                        <DoubleAnimation Duration="0:0:0.300"
                                                         Storyboard.TargetName="PART_VerticalScrollBar"
                                                         Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.300"
                                                         Storyboard.TargetName="PART_HorizontalScrollBar"
                                                         Storyboard.TargetProperty="Opacity" To="1" />
                                        <DoubleAnimation Duration="0:0:0.300"
                                                         Storyboard.TargetName="PART_VerticalScrollBar"
                                                         Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>